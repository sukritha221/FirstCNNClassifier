# -*- coding: utf-8 -*-
"""Cat Dog Classifier CNN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Sku4eEh6HtA_nt2CvI2WmZBX_MDSRbm_
"""

import tensorflow as tf
print(tf.__version__)

import keras
keras.__version__

from keras.models import Sequential
from keras.layers import Conv2D
from keras.layers import MaxPooling2D
from keras.layers import Flatten
from keras.layers import Dense
from keras import preprocessing

# Initialising the CNN
classifier = Sequential()

# Step 1 - Convolution
classifier.add(Conv2D(32, (3, 3), input_shape=(64, 64, 3), activation='relu'))

classifier.add(Conv2D(64, (3, 3), activation='relu'))

# Step 2 - Pooling
classifier.add(MaxPooling2D(pool_size=(2, 2)))

# Adding a second convolutional layer
classifier.add(Conv2D(20, (5, 5), activation='relu'))

# Adding a second pooling layer
classifier.add(MaxPooling2D(pool_size=(2, 2)))

# Step 3 - Flattening
classifier.add(Flatten())

# Step 4 - Full connection
classifier.add(Dense(units=128, activation='relu'))
classifier.add(Dense(units=28, activation='relu'))

# output layer with sigmoid activation for binary class classification
classifier.add(Dense(units=1, activation='sigmoid'))

# Compiling the CNN
classifier.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

# Part 2 - Fitting the CNN to the images

from keras.preprocessing.image import ImageDataGenerator, load_img, img_to_array

train_datagen = ImageDataGenerator(rotation_range=40,
                              width_shift_range=0.2,
                              height_shift_range=0.2,
                              rescale=1. / 255,
                              shear_range=0.2,
                              zoom_range=0.2,
                              horizontal_flip=True)

test_datagen = ImageDataGenerator(rescale=1. / 255)

from google.colab import drive
drive.mount('/content/drive')

!unzip -uq "/content/drive/My Drive/Colab Notebooks/pet images.zip" -d "/content/drive/My Drive/Colab Notebooks"

training_set = train_datagen.flow_from_directory('/content/drive/My Drive/Colab Notebooks/pet images',
                                                 target_size=(64, 64),
                                                 batch_size=32,
                                                 class_mode='binary')

test_set = test_datagen.flow_from_directory('/content/drive/My Drive/Colab Notebooks/pet images',
                                            target_size=(64, 64),
                                            batch_size=32,
                                            class_mode='binary')

model = classifier.fit_generator(training_set,
                                 steps_per_epoch=5,
                                 epochs=2,
                                 validation_data=test_set
                                 ,validation_steps=800
)

classifier.save('/content/drive/My Drive/Colab Notebooks/model.h5')
print("Saved model to disk")